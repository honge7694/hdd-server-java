@startuml

class User {
    - id: Long
    - name: String
    - address: Address
    - balance: int
    + chargeBalance(amount: int): void
    + deductBalance(amount: int): void
}

class UserHistory {
    - id: Long
    - userId: Long
    - amount: int
    - transactionType: TransactionType
    - createDate: LocalDateTime
}

class Address {
    - city: String
    - street: String
    - zipcode: String
}

enum TransactionType {
    - CHARGE
    - USE
}

class Coupon {
    - id: Long
    - code: String
    - discountAmount: int
    - issuedAt: LocalDateTime
    - expiredAt: LocalDateTime
    - quantity: int
}

class UserCoupon {
    - id: Long
    - userId: Long
    - couponId: Long
    - used: Boolean
    - usedAt: LocalDateTime
}

class Order {
    - id: Long
    - userId: Long
    - createdAt: LocalDateTime
    + create(): void
}

class OrderItem {
    - id: Long
    - orderId: Long
    - productId: Long
    - price: Long
    - quantity: Long
    + totalPrice(): Long
}

class Product {
    - id: Long
    - name: String
    - price: int
    - stockQuantity: int
'    - totalSold: int
'    + increaseSoldCount(quantity: int): void
}

' 판매량을 조회를 위해 분리
class ProductSales {
    - id: Long
    - productId: Long
    - totalSold: Long
    - lastSoldAt: LocalDateTime
    + increaseSales(quantity: int): void
}

class Cart {
    - id: Long
    - userId: Long
}

class CartItem {
    - id: Long
    - cartId: Long
    - productId: Long
    - quantity: int
    - price: int
    - createdAt: LocalDateTime
    - updatedAt: LocalDateTime
}

' 관계 정의
User "1" <-- "*" UserHistory
User "1" <-- "*" UserCoupon
Coupon "1" <-- "*" UserCoupon
User "1" <-- "*" Order
Order "1" <-- "*" OrderItem
OrderItem "*" --> "1" Product
Product "1" <-- "1" ProductSales
User "1" <-- "1" Cart
Cart "1" <-- "*" CartItem
Product "1" <-- "*" CartItem


@enduml
